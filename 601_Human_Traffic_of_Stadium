X city built a new stadium, each day many people visit it and the stats are saved as these columns: id, date, people

Please write a query to display the records which have 3 or more consecutive rows and the amount of people more than 100(inclusive).

Note:
Each day only have one row record, and the dates are increasing with id increasing.

For example, the table stadium:
+------+------------+-----------+
| id   | date       | people    |
+------+------------+-----------+
| 1    | 2017-01-01 | 10        |
| 2    | 2017-01-02 | 109       |
| 3    | 2017-01-03 | 150       |
| 4    | 2017-01-04 | 99        |
| 5    | 2017-01-05 | 145       |
| 6    | 2017-01-06 | 1455      |
| 7    | 2017-01-07 | 199       |
| 8    | 2017-01-08 | 188       |
+------+------------+-----------+

For the sample data above, the output is:

+------+------------+-----------+
| id   | date       | people    |
+------+------------+-----------+
| 5    | 2017-01-05 | 145       |
| 6    | 2017-01-06 | 1455      |
| 7    | 2017-01-07 | 199       |
| 8    | 2017-01-08 | 188       |
+------+------------+-----------+

Approach: Using complex conditions in WHERE clause

Select the days with more than 100 people attending the stadium, and join this temp table with itself. 
Taking day 1 for example, it could exist in the beginning of the consecutive 3 days, or the middle, or the last.
Some records duplicates since they appear in different positions, so we can use DISTINCT to deal with it.

SELECT DISTINCT d1.id, d1.date, d1.people
FROM stadium d1, stadium d2, stadium d3
WHERE (d1.people >= 100 AND d2.id = d1.id+1 AND d2.people >= 100 AND d3.id = d1.id+2 AND d3.people >= 100)
OR (d1.people >= 100 AND d2.id = d1.id-1 AND d2.people >= 100 AND d3.id = d1.id+1 AND d3.people >= 100)
OR (d1.people >= 100 AND d2.id = d1.id-1 AND d2.people >= 100 AND d3.id = d1.id-2 AND d3.people >= 100)
ORDER BY d1.id

a simple version:

SELECT DISTINCT d1.*
FROM stadium d1, stadium d2, stadium d3
WHERE d1.people >= 100 AND d2.people >= 100 AND d3.people >= 100
AND (
    (d2.id = d1.id+1 AND d3.id = d1.id+2) OR
    (d2.id = d1.id-1 AND d3.id = d1.id+1) OR
    (d2.id = d1.id-1 AND d3.id = d1.id-2)

)
ORDER BY d1.id

