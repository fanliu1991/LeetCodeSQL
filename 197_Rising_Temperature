Given a Weather table, write a SQL query to find all dates' Ids with higher temperature compared to its previous (yesterday's) dates.

+---------+------------------+------------------+
| Id(INT) | RecordDate(DATE) | Temperature(INT) |
+---------+------------------+------------------+
|       1 |       2015-01-01 |               10 |
|       2 |       2015-01-02 |               25 |
|       3 |       2015-01-03 |               20 |
|       4 |       2015-01-04 |               30 |
+---------+------------------+------------------+
For example, return the following Ids for the above Weather table:

+----+
| Id |
+----+
|  2 |
|  4 |
+----+


Approach: Using WHERE clause and date calculation

Queries that passed testing:

SELECT w2.Id
FROM Weather w1, Weather w2
WHERE w1.RecordDate = w2.RecordDate - INTERVAL 1 DAY AND w1.Temperature < w2.Temperature

SELECT w2.Id
FROM Weather w1, Weather w2
WHERE SUBDATE(w2.RecordDate, INTERVAL 1 DAY) = w1.RecordDate AND w1.Temperature < w2.Temperature

Queries that theoretical correct:

SELECT w2.Id
FROM Weather w1, Weather w2
WHERE DATEDIFF(day, w1.RecordDate, w2.RecordDate) = 1 AND w1.Temperature < w2.Temperature

SELECT w2.Id
FROM Weather w1, Weather w2
WHERE DATEADD(day, 1, w1.RecordDate) = w2.RecordDate AND w1.Temperature < w2.Temperature
